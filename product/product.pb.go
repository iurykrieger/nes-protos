// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product/product.proto

package product

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_AVAILABLE   Status = 0
	Status_UNAVAILABLE Status = 1
	Status_REMOVED     Status = 2
)

var Status_name = map[int32]string{
	0: "AVAILABLE",
	1: "UNAVAILABLE",
	2: "REMOVED",
}

var Status_value = map[string]int32{
	"AVAILABLE":   0,
	"UNAVAILABLE": 1,
	"REMOVED":     2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5f9f5dc4dd6fa6d7, []int{0}
}

type Spec struct {
	Value                string              `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Properties           map[string]*any.Any `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Spec) Reset()         { *m = Spec{} }
func (m *Spec) String() string { return proto.CompactTextString(m) }
func (*Spec) ProtoMessage()    {}
func (*Spec) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9f5dc4dd6fa6d7, []int{0}
}

func (m *Spec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spec.Unmarshal(m, b)
}
func (m *Spec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spec.Marshal(b, m, deterministic)
}
func (m *Spec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spec.Merge(m, src)
}
func (m *Spec) XXX_Size() int {
	return xxx_messageInfo_Spec.Size(m)
}
func (m *Spec) XXX_DiscardUnknown() {
	xxx_messageInfo_Spec.DiscardUnknown(m)
}

var xxx_messageInfo_Spec proto.InternalMessageInfo

func (m *Spec) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Spec) GetProperties() map[string]*any.Any {
	if m != nil {
		return m.Properties
	}
	return nil
}

type Tag struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9f5dc4dd6fa6d7, []int{1}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tag) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Category struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Children             map[string]*Category `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}
func (*Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9f5dc4dd6fa6d7, []int{2}
}

func (m *Category) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Category.Unmarshal(m, b)
}
func (m *Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Category.Marshal(b, m, deterministic)
}
func (m *Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Category.Merge(m, src)
}
func (m *Category) XXX_Size() int {
	return xxx_messageInfo_Category.Size(m)
}
func (m *Category) XXX_DiscardUnknown() {
	xxx_messageInfo_Category.DiscardUnknown(m)
}

var xxx_messageInfo_Category proto.InternalMessageInfo

func (m *Category) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Category) GetChildren() map[string]*Category {
	if m != nil {
		return m.Children
	}
	return nil
}

type Sku struct {
	Name                 string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status               Status              `protobuf:"varint,2,opt,name=status,proto3,enum=product.Status" json:"status,omitempty"`
	Price                float32             `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	OldPrice             float32             `protobuf:"fixed32,4,opt,name=old_price,json=oldPrice,proto3" json:"old_price,omitempty"`
	Url                  string              `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Details              map[string]*any.Any `protobuf:"bytes,6,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Specs                map[string]*Spec    `protobuf:"bytes,7,rep,name=specs,proto3" json:"specs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags                 []*Tag              `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Images               map[string]string   `protobuf:"bytes,9,rep,name=images,proto3" json:"images,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Sku) Reset()         { *m = Sku{} }
func (m *Sku) String() string { return proto.CompactTextString(m) }
func (*Sku) ProtoMessage()    {}
func (*Sku) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9f5dc4dd6fa6d7, []int{3}
}

func (m *Sku) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sku.Unmarshal(m, b)
}
func (m *Sku) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sku.Marshal(b, m, deterministic)
}
func (m *Sku) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sku.Merge(m, src)
}
func (m *Sku) XXX_Size() int {
	return xxx_messageInfo_Sku.Size(m)
}
func (m *Sku) XXX_DiscardUnknown() {
	xxx_messageInfo_Sku.DiscardUnknown(m)
}

var xxx_messageInfo_Sku proto.InternalMessageInfo

func (m *Sku) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sku) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_AVAILABLE
}

func (m *Sku) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Sku) GetOldPrice() float32 {
	if m != nil {
		return m.OldPrice
	}
	return 0
}

func (m *Sku) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Sku) GetDetails() map[string]*any.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *Sku) GetSpecs() map[string]*Spec {
	if m != nil {
		return m.Specs
	}
	return nil
}

func (m *Sku) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Sku) GetImages() map[string]string {
	if m != nil {
		return m.Images
	}
	return nil
}

type Product struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url                  string               `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Skus                 map[string]*Sku      `protobuf:"bytes,4,rep,name=skus,proto3" json:"skus,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Categories           map[string]*Category `protobuf:"bytes,5,rep,name=categories,proto3" json:"categories,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Brand                string               `protobuf:"bytes,8,opt,name=brand,proto3" json:"brand,omitempty"`
	Description          string               `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9f5dc4dd6fa6d7, []int{4}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Product) GetSkus() map[string]*Sku {
	if m != nil {
		return m.Skus
	}
	return nil
}

func (m *Product) GetCategories() map[string]*Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *Product) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterEnum("product.Status", Status_name, Status_value)
	proto.RegisterType((*Spec)(nil), "product.Spec")
	proto.RegisterMapType((map[string]*any.Any)(nil), "product.Spec.PropertiesEntry")
	proto.RegisterType((*Tag)(nil), "product.Tag")
	proto.RegisterType((*Category)(nil), "product.Category")
	proto.RegisterMapType((map[string]*Category)(nil), "product.Category.ChildrenEntry")
	proto.RegisterType((*Sku)(nil), "product.Sku")
	proto.RegisterMapType((map[string]*any.Any)(nil), "product.Sku.DetailsEntry")
	proto.RegisterMapType((map[string]string)(nil), "product.Sku.ImagesEntry")
	proto.RegisterMapType((map[string]*Spec)(nil), "product.Sku.SpecsEntry")
	proto.RegisterType((*Product)(nil), "product.Product")
	proto.RegisterMapType((map[string]*Category)(nil), "product.Product.CategoriesEntry")
	proto.RegisterMapType((map[string]*Sku)(nil), "product.Product.SkusEntry")
}

func init() { proto.RegisterFile("product/product.proto", fileDescriptor_5f9f5dc4dd6fa6d7) }

var fileDescriptor_5f9f5dc4dd6fa6d7 = []byte{
	// 614 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4b, 0x6f, 0xd3, 0x4c,
	0x14, 0xfd, 0xfc, 0xc8, 0xc3, 0xd7, 0x6d, 0x93, 0x6f, 0x54, 0xc4, 0xd4, 0x08, 0x61, 0x85, 0x45,
	0xa3, 0x22, 0x5c, 0xd4, 0x0a, 0x89, 0x87, 0x90, 0x08, 0x6d, 0x84, 0x2a, 0x95, 0x62, 0x39, 0xa5,
	0x5b, 0xe4, 0xd8, 0x83, 0xb1, 0xe2, 0xda, 0xd6, 0xd8, 0x46, 0xca, 0x96, 0xff, 0xc0, 0xff, 0x60,
	0xcf, 0x9f, 0x43, 0x9e, 0x19, 0xbf, 0x9a, 0x2c, 0x90, 0xba, 0x4a, 0x66, 0xce, 0x3d, 0x67, 0xce,
	0xb9, 0x73, 0xc7, 0xf0, 0x20, 0xa5, 0x89, 0x5f, 0x78, 0xf9, 0xb1, 0xf8, 0xb5, 0x52, 0x9a, 0xe4,
	0x09, 0x1a, 0x88, 0xa5, 0x71, 0x10, 0x24, 0x49, 0x10, 0x91, 0x63, 0xb6, 0xbd, 0x2c, 0xbe, 0x1d,
	0xbb, 0xf1, 0x9a, 0xd7, 0x4c, 0x7e, 0x4b, 0xa0, 0x2e, 0x52, 0xe2, 0xa1, 0x7d, 0xe8, 0xfd, 0x70,
	0xa3, 0x82, 0x60, 0xc9, 0x94, 0xa6, 0x9a, 0xc3, 0x17, 0xe8, 0x1d, 0x40, 0x4a, 0x93, 0x94, 0xd0,
	0x3c, 0x24, 0x19, 0x96, 0x4d, 0x65, 0xaa, 0x9f, 0x3c, 0xb6, 0xaa, 0x63, 0x4a, 0xa2, 0x65, 0xd7,
	0xf8, 0x3c, 0xce, 0xe9, 0xda, 0x69, 0x11, 0x8c, 0x05, 0x8c, 0xee, 0xc0, 0x68, 0x0c, 0xca, 0x8a,
	0xac, 0xc5, 0x29, 0xe5, 0x5f, 0x74, 0x54, 0x9d, 0x2c, 0x9b, 0xd2, 0x54, 0x3f, 0xd9, 0xb7, 0xb8,
	0x5b, 0xab, 0x72, 0x6b, 0xcd, 0xe2, 0xb5, 0xf0, 0xf3, 0x46, 0x7e, 0x25, 0x4d, 0x9e, 0x81, 0x72,
	0xed, 0x06, 0x68, 0x0f, 0xe4, 0xd0, 0x17, 0x3a, 0x72, 0xe8, 0x37, 0x01, 0xe4, 0x56, 0x80, 0xc9,
	0x1f, 0x09, 0x86, 0x67, 0x6e, 0x4e, 0x82, 0x84, 0xae, 0x37, 0x28, 0x08, 0xd4, 0xd8, 0xbd, 0xad,
	0x18, 0xec, 0x3f, 0x7a, 0x0b, 0x43, 0xef, 0x7b, 0x18, 0xf9, 0x94, 0xc4, 0x58, 0x61, 0x79, 0x9f,
	0xd4, 0x79, 0x2b, 0x21, 0xeb, 0x4c, 0x54, 0xf0, 0xc4, 0x35, 0xc1, 0xb8, 0x82, 0xdd, 0x0e, 0xb4,
	0x25, 0xed, 0x61, 0x37, 0xed, 0xff, 0x1b, 0xe2, 0xed, 0xa8, 0xbf, 0x54, 0x50, 0x16, 0xab, 0xa2,
	0x36, 0x2a, 0xb5, 0x8c, 0x1e, 0x42, 0x3f, 0xcb, 0xdd, 0xbc, 0xc8, 0x98, 0xd2, 0xde, 0xc9, 0xa8,
	0xb9, 0x16, 0xb6, 0xed, 0x08, 0xb8, 0x6c, 0x4c, 0x4a, 0x43, 0x8f, 0x60, 0xc5, 0x94, 0xa6, 0xb2,
	0xc3, 0x17, 0xe8, 0x11, 0x68, 0x49, 0xe4, 0x7f, 0xe5, 0x88, 0xca, 0x90, 0x61, 0x12, 0xf9, 0x36,
	0x03, 0xc7, 0xa0, 0x14, 0x34, 0xc2, 0x3d, 0x6e, 0xbb, 0xa0, 0x11, 0x3a, 0x85, 0x81, 0x4f, 0x72,
	0x37, 0x8c, 0x32, 0xdc, 0x67, 0x5d, 0x39, 0x68, 0x8e, 0x5b, 0x15, 0xd6, 0x39, 0xc7, 0x78, 0x3f,
	0xaa, 0x4a, 0xf4, 0x1c, 0x7a, 0x59, 0x4a, 0xbc, 0x0c, 0x0f, 0x18, 0xe5, 0x61, 0x87, 0x52, 0x0e,
	0x8f, 0x20, 0xf0, 0x2a, 0x64, 0x82, 0x9a, 0xbb, 0x41, 0x86, 0x87, 0xac, 0x7a, 0xa7, 0xae, 0xbe,
	0x76, 0x03, 0x87, 0x21, 0xe8, 0x05, 0xf4, 0xc3, 0x5b, 0x37, 0x20, 0x19, 0xd6, 0x58, 0x0d, 0xee,
	0x28, 0x5e, 0x30, 0x88, 0x4b, 0x8a, 0x3a, 0xc3, 0x86, 0x9d, 0xb6, 0xb7, 0xfb, 0x8f, 0x9f, 0xf1,
	0x11, 0xa0, 0xb1, 0xbe, 0x45, 0xef, 0x69, 0x57, 0x6f, 0xb7, 0xf3, 0x5a, 0xda, 0x42, 0xaf, 0x41,
	0x6f, 0x39, 0xde, 0xa2, 0xb4, 0x75, 0xa2, 0xd9, 0x5c, 0xfc, 0x54, 0x60, 0x60, 0x73, 0xd9, 0x7f,
	0x1a, 0x6a, 0x71, 0x9f, 0x4a, 0x73, 0x9f, 0x16, 0xa8, 0xd9, 0xaa, 0xc8, 0xb0, 0xca, 0xfa, 0x68,
	0xd4, 0x26, 0xed, 0xa6, 0x9f, 0xa2, 0x93, 0xac, 0x0e, 0xbd, 0x07, 0xf0, 0xf8, 0x80, 0x96, 0x1f,
	0x82, 0x1e, 0x63, 0x99, 0x1b, 0xac, 0xb3, 0xba, 0x44, 0x7c, 0x0b, 0x1a, 0x4e, 0x99, 0x66, 0x49,
	0xdd, 0xd8, 0xc7, 0x43, 0x9e, 0x86, 0x2d, 0x90, 0x09, 0xba, 0x4f, 0x32, 0x8f, 0x86, 0x69, 0x1e,
	0x26, 0x31, 0xd6, 0x18, 0xd6, 0xde, 0x32, 0xe6, 0xa0, 0xd5, 0x66, 0xb6, 0x34, 0x69, 0xd2, 0x6d,
	0xf7, 0x4e, 0x7b, 0x22, 0xda, 0xdd, 0xb6, 0x61, 0x74, 0xc7, 0xdd, 0x3d, 0x1f, 0xe7, 0xd1, 0x4b,
	0xe8, 0xf3, 0x97, 0x86, 0x76, 0x41, 0x9b, 0xdd, 0xcc, 0x2e, 0x2e, 0x67, 0x1f, 0x2e, 0xe7, 0xe3,
	0xff, 0xd0, 0x08, 0xf4, 0x2f, 0x57, 0xcd, 0x86, 0x84, 0x74, 0x18, 0x38, 0xf3, 0x4f, 0x9f, 0x6f,
	0xe6, 0xe7, 0x63, 0x79, 0xd9, 0x67, 0x83, 0x75, 0xfa, 0x37, 0x00, 0x00, 0xff, 0xff, 0x16, 0xc1,
	0x82, 0x58, 0xb5, 0x05, 0x00, 0x00,
}

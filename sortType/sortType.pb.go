// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sortType/sortType.proto

package sortType

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Type int32

const (
	Type_CORE   Type = 0
	Type_CUSTOM Type = 1
)

var Type_name = map[int32]string{
	0: "CORE",
	1: "CUSTOM",
}

var Type_value = map[string]int32{
	"CORE":   0,
	"CUSTOM": 1,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_296d4359a6d2c42e, []int{0}
}

type Order int32

const (
	Order_ASC  Order = 0
	Order_DESC Order = 1
)

var Order_name = map[int32]string{
	0: "ASC",
	1: "DESC",
}

var Order_value = map[string]int32{
	"ASC":  0,
	"DESC": 1,
}

func (x Order) String() string {
	return proto.EnumName(Order_name, int32(x))
}

func (Order) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_296d4359a6d2c42e, []int{1}
}

type Sort int32

const (
	Sort_RELEVANCE Sort = 0
	Sort_DISCOUNT  Sort = 1
	Sort_PRICE     Sort = 2
	Sort_REVIEW    Sort = 3
	Sort_SALE      Sort = 4
	Sort_DISTANCE  Sort = 5
)

var Sort_name = map[int32]string{
	0: "RELEVANCE",
	1: "DISCOUNT",
	2: "PRICE",
	3: "REVIEW",
	4: "SALE",
	5: "DISTANCE",
}

var Sort_value = map[string]int32{
	"RELEVANCE": 0,
	"DISCOUNT":  1,
	"PRICE":     2,
	"REVIEW":    3,
	"SALE":      4,
	"DISTANCE":  5,
}

func (x Sort) String() string {
	return proto.EnumName(Sort_name, int32(x))
}

func (Sort) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_296d4359a6d2c42e, []int{2}
}

type SortType struct {
	Type                 Type     `protobuf:"varint,1,opt,name=type,proto3,enum=sortType.Type" json:"type,omitempty"`
	Order                Order    `protobuf:"varint,2,opt,name=order,proto3,enum=sortType.Order" json:"order,omitempty"`
	Sort                 Sort     `protobuf:"varint,3,opt,name=sort,proto3,enum=sortType.Sort" json:"sort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SortType) Reset()         { *m = SortType{} }
func (m *SortType) String() string { return proto.CompactTextString(m) }
func (*SortType) ProtoMessage()    {}
func (*SortType) Descriptor() ([]byte, []int) {
	return fileDescriptor_296d4359a6d2c42e, []int{0}
}

func (m *SortType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortType.Unmarshal(m, b)
}
func (m *SortType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortType.Marshal(b, m, deterministic)
}
func (m *SortType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortType.Merge(m, src)
}
func (m *SortType) XXX_Size() int {
	return xxx_messageInfo_SortType.Size(m)
}
func (m *SortType) XXX_DiscardUnknown() {
	xxx_messageInfo_SortType.DiscardUnknown(m)
}

var xxx_messageInfo_SortType proto.InternalMessageInfo

func (m *SortType) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_CORE
}

func (m *SortType) GetOrder() Order {
	if m != nil {
		return m.Order
	}
	return Order_ASC
}

func (m *SortType) GetSort() Sort {
	if m != nil {
		return m.Sort
	}
	return Sort_RELEVANCE
}

func init() {
	proto.RegisterEnum("sortType.Type", Type_name, Type_value)
	proto.RegisterEnum("sortType.Order", Order_name, Order_value)
	proto.RegisterEnum("sortType.Sort", Sort_name, Sort_value)
	proto.RegisterType((*SortType)(nil), "sortType.SortType")
}

func init() { proto.RegisterFile("sortType/sortType.proto", fileDescriptor_296d4359a6d2c42e) }

var fileDescriptor_296d4359a6d2c42e = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x9b, 0x6e, 0xb6, 0x6e, 0x07, 0xad, 0x43, 0x2e, 0x2e, 0xe2, 0x41, 0x0a, 0x82, 0xec,
	0xa1, 0x82, 0x3e, 0xc1, 0x92, 0xce, 0x61, 0xa1, 0x36, 0x32, 0x49, 0xeb, 0x5d, 0xdc, 0x73, 0x96,
	0xb8, 0x97, 0x7d, 0x7b, 0x99, 0xd8, 0x2a, 0x78, 0x09, 0x93, 0xfc, 0xdf, 0xff, 0x0d, 0x04, 0x6e,
	0xbe, 0x62, 0x1a, 0xc3, 0x34, 0xf4, 0x4f, 0xe7, 0x61, 0x33, 0xa4, 0x38, 0x46, 0x53, 0x9d, 0xef,
	0xeb, 0x09, 0x2a, 0x7f, 0x9a, 0xcd, 0x1a, 0xf4, 0x38, 0x0d, 0x7d, 0xad, 0xee, 0xd5, 0xe3, 0xea,
	0x79, 0xb5, 0xf9, 0x2d, 0xc9, 0xc1, 0x39, 0x33, 0x0f, 0x50, 0xc6, 0xf4, 0xd9, 0xa7, 0x7a, 0x9e,
	0xa1, 0xeb, 0x3f, 0xc8, 0xc9, 0x33, 0xff, 0xa4, 0xa2, 0x92, 0xa0, 0x2e, 0xfe, 0xab, 0x64, 0x19,
	0xe7, 0xac, 0xb9, 0x03, 0x9d, 0xd7, 0x56, 0xa0, 0xad, 0x63, 0xc2, 0x99, 0x01, 0x58, 0xd8, 0x83,
	0x0f, 0xee, 0x15, 0x55, 0x73, 0x0b, 0x65, 0x36, 0x9a, 0x0b, 0x28, 0x5a, 0x6f, 0x71, 0x26, 0xdc,
	0x96, 0xbc, 0x45, 0xd5, 0x30, 0x68, 0xf1, 0x98, 0x2b, 0x58, 0x32, 0xed, 0xe8, 0xd8, 0xee, 0xad,
	0xd4, 0x2f, 0xa1, 0xda, 0x76, 0xde, 0xba, 0xc3, 0x3e, 0xa0, 0x32, 0x4b, 0x28, 0xdf, 0xb8, 0xb3,
	0x84, 0x73, 0xf1, 0x32, 0x1d, 0x3b, 0x7a, 0xc7, 0x42, 0x2c, 0xbe, 0xdd, 0x11, 0xea, 0x13, 0x1e,
	0x72, 0xb9, 0xfc, 0x58, 0xe4, 0x9f, 0x79, 0xf9, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xee, 0xb0, 0x34,
	0xf4, 0x34, 0x01, 0x00, 0x00,
}
